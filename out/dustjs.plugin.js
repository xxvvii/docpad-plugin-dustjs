// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = function(BasePlugin) {
    var DustjsPlugin;
    return DustjsPlugin = (function(_super) {
      __extends(DustjsPlugin, _super);

      DustjsPlugin.prototype.name = 'dustjs';

      DustjsPlugin.prototype.dust = null;

      function DustjsPlugin() {
        var config;
        DustjsPlugin.__super__.constructor.apply(this, arguments);
        config = this.config;
        this.dust = require('dustjs-linkedin');
        this.loadPartials(this.dust, config.partials || './src/partials');
      }

      DustjsPlugin.prototype.loadPartials = require('./lib/partials');

      DustjsPlugin.prototype.render = function(opts) {
        var dust, e, tmpl;
        if (opts.inExtension === this.config.extensions || 'dust') {
          dust = this.dust;
          try {
            tmpl = dust.compileFn(opts.content);
          } catch (_error) {
            e = _error;
            console.log(e);
          }
          if (tmpl) {
            try {
              tmpl(opts.templateData, function(err, out) {
                if (err) {
                  console.log(err);
                }
                opts.content = out;
              });
            } catch (_error) {
              e = _error;
              console.log(e);
            }
          }
        }
      };

      return DustjsPlugin;

    })(BasePlugin);
  };

}).call(this);
